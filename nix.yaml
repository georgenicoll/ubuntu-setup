---
- name: Tasks
  become: false
  block:

  - name: Find nix-env
    ansible.builtin.shell: which nix-env || echo "Not There"
    register: nix_env_location

  - name: nix-env-location output
    ansible.builtin.debug:
      var: nix_env_location

  - name: Bomb out and ask user to download nix if it's not there
    ansible.builtin.fail:
      msg: >
        nix was not found, please install by following instructions at
        https://nixos.org/manual/nix/stable/installation/installing-binary.html
        to install a multi user installation
        [usually $ sh <(curl -L https://nixos.org/nix/install) --daemon]
        or update? https://nix.dev/manual/nix/2.22/installation/upgrading
        [$ nix-shell -p nix -I nixpkgs=channel:nixpkgs-unstable --run "nix --version"]
    when: nix_env_location.stdout == "Not There"

  # - name: Update to latest unstable
  #   ansible.builtin.shell: nix-env --install --file '<nixpkgs>' --attr nix cacert -I nixpkgs=channel:nixpkgs-unstable
  #   become: yes

  # - name: reload nix-daemon
  #   ansible.builtin.service:
  #     name: nix-daemon
  #     state: reloaded
  #   become: yes

  # - name: restart nix-daemon
  #   ansible.builtin.service:
  #     name: nix-daemon
  #     state: restarted
  #   become: yes

  - name: Update channels
    ansible.builtin.shell: nix-channel --update

  - name: Installing nix packages
    ansible.builtin.include_tasks: nix-install-app.yaml
    loop:
      - nixpkgs.firefox
    #  - nixpkgs.obsidian

  - name: Nix desktop links
    ansible.builtin.include_tasks: nix-desktop-file.yaml
    loop:
    - {
        desktop_file: firefox.desktop,
        add_link: true,
        icon: firefox.png,
        fix_icon: true
      }
    #- {
    #    desktop_file: obsidian.desktop,
    #    add_link: true,
    #    icon: obsidian.png,
    #    fix_icon: true
    #  }
