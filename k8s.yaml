---
- name: k8s tools
  become: yes
  vars:
    k8s_version: v1.30
  block:

  - name: k8s tools pre-reqs
    ansible.builtin.apt:
      pkg:
      - ca-certificates
      - curl
      - apt-transport-https
      - fzf

  - name: Get architecture k8
    ansible.builtin.shell: dpkg --print-architecture
    register: architecture

  - name: Remove kubernetes-archive gpg key
    ansible.builtin.shell: "rm -f /etc/apt/keyrings/kubernetes-apt-keyring.gpg"

  - name: Add kubernetes-archive gpg key
    ansible.builtin.shell: "curl -fsSL https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg"

  - name: Add kubernetes repo
    ansible.builtin.apt_repository:
      repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/deb/ /"
      state: present

  # helm no longer 
  # # See https://helm.sh/docs/intro/install/#from-apt-debianubuntu
  # - name: Add helm gpg key
  #   ansible.builtin.apt_key:
  #     url: https://baltocdn.com/helm/signing.asc
  #     keyring: /etc/apt/keyrings/helm.gpg

  # - name: Add helm {{ architecture.stdout }} repo
  #   ansible.builtin.apt_repository:
  #     repo: "deb [arch={{ architecture.stdout }} signed-by=/etc/apt/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main"
  #     state: present

  - name: Install tools
    ansible.builtin.apt:
      update_cache: yes
      pkg:
      - kubectl
      - helm

  - name: Put code completion lines in ~/.bashrc
    become: no
    block:

    - name: Add kubectl completions
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        regexp: "source <\\(kubectl completion bash\\)"
        line: source <(kubectl completion bash)

    - name: Add helm completions
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        regexp: "source <\\(helm completion bash\\)"
        line: source <(helm completion bash)

  - name: krew
    become: no
    ignore_errors: true
    block:

    # See https://krew.sigs.k8s.io/docs/user-guide/setup/install/
    - name: Install krew
      ansible.builtin.script: scripts/krew-install.sh
      args:
        executable: bash

    - name: Add krew to path
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        state: present
        line: 'export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"'
        regexp: "export PATH=\"\\${KREW_ROOT:-\\$HOME/.krew}/bin:\\$PATH\""

    - name: Update krew plugin list
      ansible.builtin.shell: ~/.krew/bin/kubectl-krew update

    - name: Fetch krew plugin {{ item }}
      ansible.builtin.shell: ~/.krew/bin/kubectl-krew install {{ item }}
      loop:
      - ctx
      - ns

  - name: k9s
    become: no
    ignore_errors: true
    block:

    - name: Download k9s deb
      ansible.builtin.get_url:
        url: https://github.com/derailed/k9s/releases/latest/download/k9s_linux_amd64.deb
        dest: ~/Downloads/
        force: true
      register: k9s

    - name: Downloaded k9s File
      ansible.builtin.debug:
        msg: "Downloaded to {{ k9s.dest }}"

    - name: Install k9s
      become: yes
      ansible.builtin.apt:
        deb: "{{ k9s.dest }}"

  - name: kind
    become: no
    ignore_errors: true
    block:

    - name: Install kind
      ansible.builtin.shell: go install sigs.k8s.io/kind@latest

  - name: skaffold
    become: no
    ignore_errors: true
    block:

    - name: Download skaffold
      ansible.builtin.get_url:
        url: https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
        dest: ~/Downloads/skaffold
        force: true
      register: skaffold

    - name: Install skaffold
      ansible.builtin.shell: install {{ skaffold.dest }} /usr/local/bin/
      become: yes


